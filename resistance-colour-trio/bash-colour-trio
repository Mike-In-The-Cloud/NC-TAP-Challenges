#!/bin/bash

# Resistor Colour Trio challange

# This solution uses command line input

# function to swtich variable to corrisponding int
digit () {
    # bash switch statement
    case $1 in 
        (black)     echo 0;;
        (brown)     echo 1;;
        (red)       echo 2;;
        (orange)    echo 3;;
        (yellow)    echo 4;;
        (green)     echo 5;;
        (blue)      echo 6;;
        (violet)    echo 7;;
        (grey)      echo 8;;
        (white)     echo 9;;
        (*)
            echo "invalid colour $1" >&2
            return 1
            ''
    esac
}


# function to assign the correct unit to the resistor
sufix () {
    # bash switch statement
    case $1 in 
        (black)     echo "ohms";;
        (brown)     echo "ohms";;
        (red)       echo "ohms";;
        (orange)    echo "Kiloohms";;
        (yellow)    echo "Kiloohms";;
        (green)     echo "Megaohms";;
        (blue)      echo "Megaohms";;
        (violet)    echo "Statohms";;
        (grey)      echo "Statohms";;
        (white)     echo "Abohms";;
        (*)
            echo "invalid colour $1" >&2
            return 1
            ''
    esac
}

# Get user input
echo -n "Enter Three Colours from the resistor (seperated by a space): "
read d1 d2 s1

# a little dirty but it works, needs a more elegant solution
d1=$(echo $d1 | tr '[:upper:]' '[:lower:]')
d2=$(echo $d2 | tr '[:upper:]' '[:lower:]')
s1=$(echo $s1 | tr '[:upper:]' '[:lower:]')

# call to function
d1=$(digit "$d1") && d2=$(digit "$d2")|| exit 1
# call to suffix 
s1=$(sufix "$s1") || exit 1

# print result
echo "The value of this resistor is: ${d1}${d2} ${s1}"